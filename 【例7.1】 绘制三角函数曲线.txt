//绘制正弦曲线
private void DrawSin()
{
    int x1,x2;
    double y1,y2;
    double a;
    Pen myPen = new Pen(Color.Blue, 3);
    x1 = x2 = 0;
    y1 = y2 = panel1.Height / 2;
    for (x2 = 0; x2 < panel1.Width; x2++)
    {
        a = 2 * Math.PI * x2 / panel1.Width;
        y2 = Math.Sin(a);
        y2 = (1 − y2) * panel1.Height / 2;
        panel1.CreateGraphics().DrawLine(myPen, x1, (float)y1, x2, (float)y2);
        x1 = x2;
        y1 = y2;
    }
}
// 绘制正切曲线
private void DrawTan()
{
    int x1, x2;
    double y1, y2;
    double a;
    Pen myPen = new Pen(Color.Yellow, 2);
    x1 = x2 = 0;
    y1 = y2 = panel1.Height / 2;
    for (x2 = 0; x2 < panel1.Width; x2++)
    {
        a = 2 * Math.PI * x2 / panel1.Width;
        y2 = Math.Tan(a);
        y2 = (1 − y2) * panel1.Height / 2;
        panel1.CreateGraphics().DrawLine(myPen, x1, (float)y1, x2, (float)y2);
        x1 = x2;
        y1 = y2;
    }
}
//绘制余弦曲线
private void DrawCos()
{
    int x1, x2;
    double y1, y2;
    double a;
    Pen myPen = new Pen(Color.Red, 2);
    x1 = x2 = 0;
    y1 = y2 = panel1.Height / 2;
    for (x2 = 0; x2 < panel1.Width; x2++)
    {
        a = 2 * Math.PI * x2 / panel1.Width;
        y2 = Math.Cos(a);
        y2 = (1 − y2) * panel1.Height / 2;
        panel1.CreateGraphics().DrawLine(myPen, x1, (float)y1, x2, (float)y2);
        x1 = x2;
        y1 = y2;
    }
}
